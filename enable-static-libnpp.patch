--- configure	2018-11-06 10:01:04.548061066 +0000
+++ configure.orig	2018-11-06 09:52:10.058810138 +0000
@@ -317,7 +317,6 @@
   --enable-libdrm          enable DRM code (Linux) [no]
   --enable-libmfx          enable Intel MediaSDK (AKA Quick Sync Video) code via libmfx [no]
   --enable-libnpp          enable Nvidia Performance Primitives-based code [no]
-  --disable-libnpp-static  disable using static version of libnpp [autodetect]
   --enable-mmal            enable Broadcom Multi-Media Abstraction Layer (Raspberry Pi) via MMAL [no]
   --disable-nvdec          disable Nvidia video decoding acceleration (via hwaccel) [autodetect]
   --disable-nvenc          disable Nvidia video encoding code [autodetect]
@@ -1754,7 +1753,6 @@
 HWACCEL_LIBRARY_NONFREE_LIST="
     cuda_sdk
     libnpp
-    libnpp_static
 "

 HWACCEL_LIBRARY_LIST="
@@ -4283,7 +4281,7 @@
     unset _type _ident _cc_c _cc_e _cc_o _flags _cflags
     unset _ld_o _ldflags _ld_lib _ld_path
     unset _depflags _DEPCMD _DEPFLAGS
-    _flags_filter='filter_out -lm|-ldl'
+    _flags_filter=echo

     if $_cc --version 2>&1 | grep -q '^GNU assembler'; then
         true # no-op to avoid reading stdin in following checks
@@ -6004,16 +6002,9 @@
 enabled libmodplug        && require_pkg_config libmodplug libmodplug libmodplug/modplug.h ModPlug_Load
 enabled libmp3lame        && require "libmp3lame >= 3.98.3" lame/lame.h lame_set_VBR_quality -lmp3lame $libm_extralibs
 enabled libmysofa         && require libmysofa "mysofa.h" mysofa_load -lmysofa $zlib_extralibs
-enabled libnpp            && { { if ! disabled libnpp_static; then
-                                 check_lib libnpp npp.h nppGetLibVersion -lnppi_static -lnppc_static -lcudart_static -lculibos $ldl  ||
-                                 check_lib libnpp npp.h nppGetLibVersion -lnppi_static -lnppc_static -lcudart_static -lculibos $ldl -lstdc++ ||
-                                 check_lib libnpp npp.h nppGetLibVersion -lnppi_static -lnppc_static -lcudart_static -lculibos $ldl -lstdc++ -lrt
-                               else false; fi; } ||
-				{ if ! enabled libnpp_static; then
-				check_lib libnpp npp.h nppGetLibVersion -lnppig -lnppicc -lnppc ||
-                               	check_lib libnpp npp.h nppGetLibVersion -lnppi -lnppc
-                               else false; fi; } ||
-                               die "ERROR: libnpp not found"; }
+enabled libnpp            && { check_lib libnpp npp.h nppGetLibVersion -lnppig -lnppicc -lnppc ||
+                               check_lib libnpp npp.h nppGetLibVersion -lnppi -lnppc ||
+                               die "ERROR: libnpp not found"; }
 enabled libopencore_amrnb && require libopencore_amrnb opencore-amrnb/interf_dec.h Decoder_Interface_init -lopencore-amrnb
 enabled libopencore_amrwb && require libopencore_amrwb opencore-amrwb/dec_if.h D_IF_init -lopencore-amrwb
 enabled libopencv         && { check_header opencv2/core/core_c.h &&
